# flamsteed.js

# Questions

- Do we want to pass through the entire performance.timing object? Is it something we need?
- Using performance.now() loses us IE9. Is this a good sacrifice? It will mean we don't need to manage an initial timestamp. IE 10 has more or less caught up with 8 & 9 globally and previews of IE11 dev tools are out (need to double check out stats) - http://gs.statcounter.com/#browser_version_partially_combined-ww-daily-20130108-20130507
- Send through the LP stuff with a UUID first time and then UUID + events after? Do we care if it's the same user?
- LP convention wrapper: event structure, naming, variants, deployment etc.


# DONE

- instantiate but blackhole everything if not capable - Done
- shorten RUM keys, values (relative to t0) - Done
- force flush on unload - Done


## LP client side enrichment
- url - done
- username - done
- timezone(country for the moment) - done
- resolution/viewport/docsize - done
- variant - done

## Added in flamsteed
-  LP flamsteed version - done
-  uuid?? - done



# TODO

## Refactor
- reuse timeout binding (efficiency)
- Make _serialize produce arrays of arrays


## LP client side enrichment
- lp cookie, lp session cookie - which session cookie?
- session id

## Possible/reliable?
- bandwidth ??
- latency ??

## From headers?
- referrer
- browser

## LP deployment
** environment!

## server side ETL enrichments
** GeoIP
** user agent
** timestamp
** uuid
** blackhole bots


